{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alish\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\PAPKI\\\\Univer\\\\\\u04216\\\\diplomka\\\\src\\\\components\\\\Singup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport logo from '../img/oina.png';\n/*\r\nfunction Singup() {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [FirstName, setFirstName] = useState('')\r\n    const [LastName, setLastName] = useState('')\r\n    const [Phone, setPhone] = useState('')\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault()\r\n        \r\n        const response = await fetch('http://localhost:8085/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                LastName,\r\n                FirstName,\r\n                Phone,\r\n                Email,\r\n                Password,\r\n            }), \r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (data.status === 'ok') {\r\n            navigate('/Singin');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Singup\">\r\n            <img src={logo} alt=\"\" />\r\n            <form onSubmit={registerUser}>\r\n                <div className=\"form-text\">\r\n                    <h4>Имя</h4>\r\n                    <input type=\"text\" name=\"FirstName\" id=\"FirstName\" placeholder=\"Введите имя\" value={FirstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Фамилия</h4>\r\n                    <input type=\"text\" name=\"LastName\" id=\"LastName\" placeholder=\"Введите фамилию\" value={LastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Номер телефона</h4>\r\n                    <input type=\"text\" name=\"Phone\" id=\"Phone\" placeholder=\"Введите номер телефона\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Электронная почта</h4>\r\n                    <input type=\"login\" name=\"Email\" id=\"Email\" placeholder=\"Введите электронную почту\"  value={Email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Пароль</h4>\r\n                    <input type=\"password\" name=\"Password\" id=\"Password\" placeholder=\"Введите пароль\" value={Password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <br /><button type=\"submit\" className=\"button\" >Зарегистрироваться</button>\r\n                <br />Уже создан аккаунт? <Link to=\"/Singin\">Войдите!</Link>\r\n            </form>\r\n        </div>\r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default Singup;\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Singup = () => {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('');\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        const response = await fetch('http://localhost:8085/register', {\n          mode: 'no-cors',\n          method: 'POST'\n        });\n        if (response.ok) {\n          setConnectionStatus('Connection is successful!');\n        } else {\n          throw new Error('Network response was not ok');\n        }\n      } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n        setConnectionStatus('Connection failed');\n      }\n    };\n    checkConnection();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Connection Status: \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Singup, \"PRtaJ6JxPUduFExlrjhAGsk4J1I=\");\n_c = Singup;\nexport default Singup;\nvar _c;\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","Link","useNavigate","logo","jsxDEV","_jsxDEV","Singup","_s","connectionStatus","setConnectionStatus","checkConnection","response","fetch","mode","method","ok","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alish/OneDrive/Рабочий стол/PAPKI/Univer/С6/diplomka/src/components/Singup.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\nimport logo from '../img/oina.png';\r\n/*\r\nfunction Singup() {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [FirstName, setFirstName] = useState('')\r\n    const [LastName, setLastName] = useState('')\r\n    const [Phone, setPhone] = useState('')\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault()\r\n        \r\n        const response = await fetch('http://localhost:8085/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                LastName,\r\n                FirstName,\r\n                Phone,\r\n                Email,\r\n                Password,\r\n            }), \r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (data.status === 'ok') {\r\n            navigate('/Singin');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Singup\">\r\n            <img src={logo} alt=\"\" />\r\n            <form onSubmit={registerUser}>\r\n                <div className=\"form-text\">\r\n                    <h4>Имя</h4>\r\n                    <input type=\"text\" name=\"FirstName\" id=\"FirstName\" placeholder=\"Введите имя\" value={FirstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Фамилия</h4>\r\n                    <input type=\"text\" name=\"LastName\" id=\"LastName\" placeholder=\"Введите фамилию\" value={LastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Номер телефона</h4>\r\n                    <input type=\"text\" name=\"Phone\" id=\"Phone\" placeholder=\"Введите номер телефона\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Электронная почта</h4>\r\n                    <input type=\"login\" name=\"Email\" id=\"Email\" placeholder=\"Введите электронную почту\"  value={Email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Пароль</h4>\r\n                    <input type=\"password\" name=\"Password\" id=\"Password\" placeholder=\"Введите пароль\" value={Password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <br /><button type=\"submit\" className=\"button\" >Зарегистрироваться</button>\r\n                <br />Уже создан аккаунт? <Link to=\"/Singin\">Войдите!</Link>\r\n            </form>\r\n        </div>\r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default Singup;\r\n*/\r\n\r\nconst Singup = () => {\r\n    const [connectionStatus, setConnectionStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    const checkConnection = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8085/register', {\r\n            mode: 'no-cors',\r\n            method: 'POST',\r\n        });\r\n        if (response.ok) {\r\n          setConnectionStatus('Connection is successful!');\r\n        } else {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n      } catch (error) {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n        setConnectionStatus('Connection failed');\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Connection Status: {connectionStatus}</h1>\r\n    </div>\r\n  );\r\n};\r\n  \r\n  export default Singup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACnE,OAAOC,IAAI,MAAM,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEA,SAAAC,MAAA,IAAAC,OAAA;AAuEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACd,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC3DC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;QACZ,CAAC,CAAC;QACF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACfN,mBAAmB,CAAC,2BAA2B,CAAC;QAClD,CAAC,MAAM;UACL,MAAM,IAAIO,KAAK,CAAC,6BAA6B,CAAC;QAChD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;QACrER,mBAAmB,CAAC,mBAAmB,CAAC;MAC1C;IACF,CAAC;IAEDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAAc,QAAA,GAAI,qBAAmB,EAACX,gBAAgB;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAChB,EAAA,CA7BID,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AA+BV,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}