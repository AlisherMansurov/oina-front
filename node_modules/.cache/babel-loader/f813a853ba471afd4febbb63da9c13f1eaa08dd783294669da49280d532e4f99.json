{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport logo from '../img/oina.png';\n/*\r\nfunction Singup() {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [FirstName, setFirstName] = useState('')\r\n    const [LastName, setLastName] = useState('')\r\n    const [Phone, setPhone] = useState('')\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault()\r\n        \r\n        const response = await fetch('http://localhost:8085/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                LastName,\r\n                FirstName,\r\n                Phone,\r\n                Email,\r\n                Password,\r\n            }), \r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (data.status === 'ok') {\r\n            navigate('/Singin');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Singup\">\r\n            <img src={logo} alt=\"\" />\r\n            <form onSubmit={registerUser}>\r\n                <div className=\"form-text\">\r\n                    <h4>Имя</h4>\r\n                    <input type=\"text\" name=\"FirstName\" id=\"FirstName\" placeholder=\"Введите имя\" value={FirstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Фамилия</h4>\r\n                    <input type=\"text\" name=\"LastName\" id=\"LastName\" placeholder=\"Введите фамилию\" value={LastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Номер телефона</h4>\r\n                    <input type=\"text\" name=\"Phone\" id=\"Phone\" placeholder=\"Введите номер телефона\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Электронная почта</h4>\r\n                    <input type=\"login\" name=\"Email\" id=\"Email\" placeholder=\"Введите электронную почту\"  value={Email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Пароль</h4>\r\n                    <input type=\"password\" name=\"Password\" id=\"Password\" placeholder=\"Введите пароль\" value={Password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <br /><button type=\"submit\" className=\"button\" >Зарегистрироваться</button>\r\n                <br />Уже создан аккаунт? <Link to=\"/Singin\">Войдите!</Link>\r\n            </form>\r\n        </div>\r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default Singup;\r\n*/\n\nconst Singup = () => {\n  console.log(`connecting... ${new Date().toISOString()}`);\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), 5000);\n  fetch('http://localhost:8085/register', {\n    signal: controller.signal\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    } else {\n      return Promise.reject('something wrong');\n    }\n  }).then(res => {\n    console.log('ok');\n    setTimeout(getCurrent, 3000);\n    this.props.importCurrentSong(res.current_track);\n  }).catch(err => {\n    console.log('fail');\n    setTimeout(getCurrent, 25000);\n  });\n};\n_c = Singup;\ngetCurrent();\nexport default Singup;\nvar _c;\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","Link","useNavigate","logo","Singup","console","log","Date","toISOString","controller","AbortController","timeoutId","setTimeout","abort","fetch","signal","then","res","status","json","Promise","reject","getCurrent","props","importCurrentSong","current_track","catch","err","_c","$RefreshReg$"],"sources":["C:/Users/alish/OneDrive/Рабочий стол/PAPKI/Univer/С6/diplomka/src/components/Singup.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\nimport logo from '../img/oina.png';\r\n/*\r\nfunction Singup() {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [FirstName, setFirstName] = useState('')\r\n    const [LastName, setLastName] = useState('')\r\n    const [Phone, setPhone] = useState('')\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault()\r\n        \r\n        const response = await fetch('http://localhost:8085/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                LastName,\r\n                FirstName,\r\n                Phone,\r\n                Email,\r\n                Password,\r\n            }), \r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (data.status === 'ok') {\r\n            navigate('/Singin');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Singup\">\r\n            <img src={logo} alt=\"\" />\r\n            <form onSubmit={registerUser}>\r\n                <div className=\"form-text\">\r\n                    <h4>Имя</h4>\r\n                    <input type=\"text\" name=\"FirstName\" id=\"FirstName\" placeholder=\"Введите имя\" value={FirstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Фамилия</h4>\r\n                    <input type=\"text\" name=\"LastName\" id=\"LastName\" placeholder=\"Введите фамилию\" value={LastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Номер телефона</h4>\r\n                    <input type=\"text\" name=\"Phone\" id=\"Phone\" placeholder=\"Введите номер телефона\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Электронная почта</h4>\r\n                    <input type=\"login\" name=\"Email\" id=\"Email\" placeholder=\"Введите электронную почту\"  value={Email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Пароль</h4>\r\n                    <input type=\"password\" name=\"Password\" id=\"Password\" placeholder=\"Введите пароль\" value={Password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <br /><button type=\"submit\" className=\"button\" >Зарегистрироваться</button>\r\n                <br />Уже создан аккаунт? <Link to=\"/Singin\">Войдите!</Link>\r\n            </form>\r\n        </div>\r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default Singup;\r\n*/\r\n\r\nconst Singup = () => {\r\n    console.log(`connecting... ${new Date().toISOString()}`);\r\n  const controller = new AbortController();\r\n  const timeoutId = setTimeout(() => controller.abort(), 5000);\r\n  fetch('http://localhost:8085/register', { signal: controller.signal })\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        return res.json();\r\n      } else {\r\n        return Promise.reject('something wrong');\r\n      }\r\n    })\r\n    .then((res) => {\r\n      console.log('ok');\r\n      setTimeout(getCurrent, 3000);\r\n      this.props.importCurrentSong(res.current_track);\r\n    })\r\n    .catch((err) => {\r\n      console.log('fail');\r\n      setTimeout(getCurrent, 25000);\r\n    });\r\n}\r\n\r\ngetCurrent();\r\n  \r\n  export default Singup;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACnE,OAAOC,IAAI,MAAM,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjBC,OAAO,CAACC,GAAG,CAAE,iBAAgB,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAE,EAAC,CAAC;EAC1D,MAAMC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;EACxC,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAMH,UAAU,CAACI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;EAC5DC,KAAK,CAAC,gCAAgC,EAAE;IAAEC,MAAM,EAAEN,UAAU,CAACM;EAAO,CAAC,CAAC,CACnEC,IAAI,CAAEC,GAAG,IAAK;IACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;MACtB,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAC,iBAAiB,CAAC;IAC1C;EACF,CAAC,CAAC,CACDL,IAAI,CAAEC,GAAG,IAAK;IACbZ,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjBM,UAAU,CAACU,UAAU,EAAE,IAAI,CAAC;IAC5B,IAAI,CAACC,KAAK,CAACC,iBAAiB,CAACP,GAAG,CAACQ,aAAa,CAAC;EACjD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdtB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBM,UAAU,CAACU,UAAU,EAAE,KAAK,CAAC;EAC/B,CAAC,CAAC;AACN,CAAC;AAAAM,EAAA,GArBKxB,MAAM;AAuBZkB,UAAU,CAAC,CAAC;AAEV,eAAelB,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}