{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alish\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\PAPKI\\\\Univer\\\\\\u04216\\\\diplomka\\\\src\\\\components\\\\Singup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport logo from '../img/oina.png';\n/*\r\nfunction Singup() {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [FirstName, setFirstName] = useState('')\r\n    const [LastName, setLastName] = useState('')\r\n    const [Phone, setPhone] = useState('')\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault()\r\n        \r\n        const response = await fetch('http://localhost:8085/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                LastName,\r\n                FirstName,\r\n                Phone,\r\n                Email,\r\n                Password,\r\n            }), \r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (data.status === 'ok') {\r\n            navigate('/Singin');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Singup\">\r\n            <img src={logo} alt=\"\" />\r\n            <form onSubmit={registerUser}>\r\n                <div className=\"form-text\">\r\n                    <h4>Имя</h4>\r\n                    <input type=\"text\" name=\"FirstName\" id=\"FirstName\" placeholder=\"Введите имя\" value={FirstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Фамилия</h4>\r\n                    <input type=\"text\" name=\"LastName\" id=\"LastName\" placeholder=\"Введите фамилию\" value={LastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Номер телефона</h4>\r\n                    <input type=\"text\" name=\"Phone\" id=\"Phone\" placeholder=\"Введите номер телефона\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Электронная почта</h4>\r\n                    <input type=\"login\" name=\"Email\" id=\"Email\" placeholder=\"Введите электронную почту\"  value={Email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Пароль</h4>\r\n                    <input type=\"password\" name=\"Password\" id=\"Password\" placeholder=\"Введите пароль\" value={Password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <br /><button type=\"submit\" className=\"button\" >Зарегистрироваться</button>\r\n                <br />Уже создан аккаунт? <Link to=\"/Singin\">Войдите!</Link>\r\n            </form>\r\n        </div>\r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default Singup;\r\n\r\n\r\n\r\n  export default Singup;\r\n  */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registerUser = async (url, userData) => {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Registration failed');\n    }\n    const data = await response.json();\n    console.log('User registered successfully:', data);\n    return data; // Можете вернуть что-то еще, если нужно\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nconst Singup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const handleInputChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const registeredUser = await registerUser('http://localhost:8085/register', formData);\n      console.log('Registered User:', registeredUser);\n      // Дополнительные действия после успешной регистрации\n    } catch (error) {\n      console.error('Error registering user:', error);\n      // Дополнительные действия в случае ошибки\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"FirstName\",\n      placeholder: \"FirstName\",\n      value: formData.FirstName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"LastName\",\n      placeholder: \"LastName\",\n      value: formData.LastName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"Phone\",\n      placeholder: \"Phone\",\n      value: formData.Phone,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"Email\",\n      placeholder: \"Email\",\n      value: formData.Email,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"Password\",\n      placeholder: \"Password\",\n      value: formData.FirstName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }, this);\n};\n_s(Singup, \"XXoI0Z6iG5NxLvgdsNFAP0uSSC0=\");\n_c = Singup;\nexport default Singup;\nvar _c;\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","Link","useNavigate","logo","jsxDEV","_jsxDEV","registerUser","url","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","Singup","_s","formData","setFormData","username","email","password","handleInputChange","event","target","name","value","handleSubmit","preventDefault","registeredUser","onSubmit","children","type","placeholder","FirstName","onChange","fileName","_jsxFileName","lineNumber","columnNumber","LastName","Phone","Email","_c","$RefreshReg$"],"sources":["C:/Users/alish/OneDrive/Рабочий стол/PAPKI/Univer/С6/diplomka/src/components/Singup.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\nimport logo from '../img/oina.png';\r\n/*\r\nfunction Singup() {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [FirstName, setFirstName] = useState('')\r\n    const [LastName, setLastName] = useState('')\r\n    const [Phone, setPhone] = useState('')\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault()\r\n        \r\n        const response = await fetch('http://localhost:8085/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                LastName,\r\n                FirstName,\r\n                Phone,\r\n                Email,\r\n                Password,\r\n            }), \r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (data.status === 'ok') {\r\n            navigate('/Singin');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Singup\">\r\n            <img src={logo} alt=\"\" />\r\n            <form onSubmit={registerUser}>\r\n                <div className=\"form-text\">\r\n                    <h4>Имя</h4>\r\n                    <input type=\"text\" name=\"FirstName\" id=\"FirstName\" placeholder=\"Введите имя\" value={FirstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Фамилия</h4>\r\n                    <input type=\"text\" name=\"LastName\" id=\"LastName\" placeholder=\"Введите фамилию\" value={LastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Номер телефона</h4>\r\n                    <input type=\"text\" name=\"Phone\" id=\"Phone\" placeholder=\"Введите номер телефона\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Электронная почта</h4>\r\n                    <input type=\"login\" name=\"Email\" id=\"Email\" placeholder=\"Введите электронную почту\"  value={Email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Пароль</h4>\r\n                    <input type=\"password\" name=\"Password\" id=\"Password\" placeholder=\"Введите пароль\" value={Password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <br /><button type=\"submit\" className=\"button\" >Зарегистрироваться</button>\r\n                <br />Уже создан аккаунт? <Link to=\"/Singin\">Войдите!</Link>\r\n            </form>\r\n        </div>\r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default Singup;\r\n\r\n\r\n\r\n  export default Singup;\r\n  */\r\n\r\n  \r\n    const registerUser = async (url, userData) => {\r\n        try {\r\n          const response = await fetch(url, {\r\n            \r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userData),\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error('Registration failed');\r\n          }\r\n      \r\n          const data = await response.json();\r\n          console.log('User registered successfully:', data);\r\n          return data; // Можете вернуть что-то еще, если нужно\r\n        } catch (error) {\r\n          console.error('Error registering user:', error);\r\n          throw error;\r\n        }\r\n      };\r\n      \r\n      const Singup = () => {\r\n        const [formData, setFormData] = useState({\r\n          username: '',\r\n          email: '',\r\n          password: '',\r\n        });\r\n      \r\n        const handleInputChange = (event) => {\r\n          setFormData({\r\n            ...formData,\r\n            [event.target.name]: event.target.value,\r\n          });\r\n        };\r\n      \r\n        const handleSubmit = async (event) => {\r\n          event.preventDefault();\r\n          try {\r\n            const registeredUser = await registerUser('http://localhost:8085/register', formData);\r\n            console.log('Registered User:', registeredUser);\r\n            // Дополнительные действия после успешной регистрации\r\n          } catch (error) {\r\n            console.error('Error registering user:', error);\r\n            // Дополнительные действия в случае ошибки\r\n          }\r\n        };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"FirstName\"\r\n          placeholder=\"FirstName\"\r\n          value={formData.FirstName}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"LastName\"\r\n          placeholder=\"LastName\"\r\n          value={formData.LastName}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Phone\"\r\n          placeholder=\"Phone\"\r\n          value={formData.Phone}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Email\"\r\n          placeholder=\"Email\"\r\n          value={formData.Email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"Password\"\r\n          placeholder=\"Password\"\r\n          value={formData.FirstName}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    );\r\n  };\r\n  \r\n  export default Singup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}