{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alish\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\PAPKI\\\\Univer\\\\\\u04216\\\\diplomka\\\\src\\\\components\\\\Singup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport logo from '../img/oina.png';\n/*\r\nfunction Singup() {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [FirstName, setFirstName] = useState('')\r\n    const [LastName, setLastName] = useState('')\r\n    const [Phone, setPhone] = useState('')\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault()\r\n        \r\n        const response = await fetch('http://localhost:8085/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                LastName,\r\n                FirstName,\r\n                Phone,\r\n                Email,\r\n                Password,\r\n            }), \r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (data.status === 'ok') {\r\n            navigate('/Singin');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Singup\">\r\n            <img src={logo} alt=\"\" />\r\n            <form onSubmit={registerUser}>\r\n                <div className=\"form-text\">\r\n                    <h4>Имя</h4>\r\n                    <input type=\"text\" name=\"FirstName\" id=\"FirstName\" placeholder=\"Введите имя\" value={FirstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Фамилия</h4>\r\n                    <input type=\"text\" name=\"LastName\" id=\"LastName\" placeholder=\"Введите фамилию\" value={LastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Номер телефона</h4>\r\n                    <input type=\"text\" name=\"Phone\" id=\"Phone\" placeholder=\"Введите номер телефона\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Электронная почта</h4>\r\n                    <input type=\"login\" name=\"Email\" id=\"Email\" placeholder=\"Введите электронную почту\"  value={Email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Пароль</h4>\r\n                    <input type=\"password\" name=\"Password\" id=\"Password\" placeholder=\"Введите пароль\" value={Password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <br /><button type=\"submit\" className=\"button\" >Зарегистрироваться</button>\r\n                <br />Уже создан аккаунт? <Link to=\"/Singin\">Войдите!</Link>\r\n            </form>\r\n        </div>\r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default Singup;\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Singup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    Email: '',\n    Password: '',\n    FirstName: '',\n    LastName: '',\n    Phone: ''\n  });\n  const registerUser = async (url, userData) => {\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n      const data = await response.json();\n      console.log('User registered successfully:', data);\n      return data; // Можете вернуть что-то еще, если нужно\n    } catch (error) {\n      console.error('Error registering user:', error);\n      throw error;\n    }\n  };\n  const url = 'http://localhost:8085/api/register'; // Ваш URL для регистрации пользователей\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: registerUser,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      value: formData.username,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }, this);\n};\n_s(Singup, \"fpQtSWvJ+2gpNmuMzva+juWOPr4=\");\n_c = Singup;\nexport default Singup;\nvar _c;\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","Link","useNavigate","logo","jsxDEV","_jsxDEV","Singup","_s","formData","setFormData","Email","Password","FirstName","LastName","Phone","registerUser","url","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","onSubmit","children","type","name","placeholder","value","username","onChange","handleInputChange","fileName","_jsxFileName","lineNumber","columnNumber","email","password","_c","$RefreshReg$"],"sources":["C:/Users/alish/OneDrive/Рабочий стол/PAPKI/Univer/С6/diplomka/src/components/Singup.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\nimport logo from '../img/oina.png';\r\n/*\r\nfunction Singup() {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [FirstName, setFirstName] = useState('')\r\n    const [LastName, setLastName] = useState('')\r\n    const [Phone, setPhone] = useState('')\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault()\r\n        \r\n        const response = await fetch('http://localhost:8085/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content Type' : 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                LastName,\r\n                FirstName,\r\n                Phone,\r\n                Email,\r\n                Password,\r\n            }), \r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        if (data.status === 'ok') {\r\n            navigate('/Singin');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Singup\">\r\n            <img src={logo} alt=\"\" />\r\n            <form onSubmit={registerUser}>\r\n                <div className=\"form-text\">\r\n                    <h4>Имя</h4>\r\n                    <input type=\"text\" name=\"FirstName\" id=\"FirstName\" placeholder=\"Введите имя\" value={FirstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Фамилия</h4>\r\n                    <input type=\"text\" name=\"LastName\" id=\"LastName\" placeholder=\"Введите фамилию\" value={LastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Номер телефона</h4>\r\n                    <input type=\"text\" name=\"Phone\" id=\"Phone\" placeholder=\"Введите номер телефона\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Электронная почта</h4>\r\n                    <input type=\"login\" name=\"Email\" id=\"Email\" placeholder=\"Введите электронную почту\"  value={Email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-text\">\r\n                    <h4>Пароль</h4>\r\n                    <input type=\"password\" name=\"Password\" id=\"Password\" placeholder=\"Введите пароль\" value={Password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <br /><button type=\"submit\" className=\"button\" >Зарегистрироваться</button>\r\n                <br />Уже создан аккаунт? <Link to=\"/Singin\">Войдите!</Link>\r\n            </form>\r\n        </div>\r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default Singup;\r\n*/\r\n\r\nconst Singup = () => {\r\n    const [formData, setFormData] = useState({\r\n        Email: '',\r\n        Password: '',\r\n        FirstName: '',\r\n        LastName: '',\r\n        Phone: '',\r\n    });\r\n  \r\n    const registerUser = async (url, userData) => {\r\n        try {\r\n          const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userData),\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error('Registration failed');\r\n          }\r\n      \r\n          const data = await response.json();\r\n          console.log('User registered successfully:', data);\r\n          return data; // Можете вернуть что-то еще, если нужно\r\n        } catch (error) {\r\n          console.error('Error registering user:', error);\r\n          throw error;\r\n        }\r\n      };\r\n\r\n      const url = 'http://localhost:8085/api/register'; // Ваш URL для регистрации пользователей\r\n\r\n  \r\n    return (\r\n      <form onSubmit={registerUser}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          value={formData.username}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    );\r\n  };\r\n  \r\n  export default Singup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}